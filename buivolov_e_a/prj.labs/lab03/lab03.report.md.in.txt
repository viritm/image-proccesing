## Работа 3. Яркостные преобразования
автор: Буйволов Е. А.
дата: @time_stemp@

[https://github.com/viritm/image-proccesing](https://github.com/viritm/image-proccesing)

### Задание
1. В качестве тестового использовать изображение data/cross_0256x0256.png
2. Сгенерировать нетривиальную новую функцию преобразования яркости (не стоит использовать слишком простые и слишком простые функции).
3. Сгенерировать визуализацию функцию преобразования яркости в виде изображения размером 512x512, черные точки на белом фоне.
4. Преобразовать пиксели grayscale версии тестового изображения при помощи LUT для сгенерированной функции преобразования.
4. Преобразовать пиксели каждого канала тестового изображения при помощи LUT для сгенерированной функции преобразования.
5. Результы сохранить для вставки в отчет.

### Результаты

![](testImg.png)
Рис. 1. Исходное тестовое изображение	

![](testImgGray.png)
Рис. 2. Тестовое изображение greyscale

![](grayImg.png)
Рис. 3. Результат применения функции преобразования яркости для greyscale

![](channelsImg.png)
Рис. 4. Результат применения функции преобразования яркости для каналов
- левый верхний - grayscale тестовое изображение после преобразовния яркости 
- левый нижний - монохромная (черно-зеленая) визуализация канала G после преобразовния яркости
- правый верхний - монохромная (черно-красная) визуализация канала R после преобразовния яркости
- правый нижний - монохромная (черно-синяя) визуализация канала B после преобразовния яркости

![](graph.png)
Рис. 5. Визуализация функции яркостного преобразования

### Текст программы

```cpp
@cpp_source@
```
